//https://paiza.hatenablog.com/entry/paizacloud_online_multiplayer_game


const express = require('express');
const http = require('http');
const path = require('path');
const socketIO = require('socket.io');
const app = express()
const server = http.Server(app);
const io = socketIO(server);

const FWIDTH = 1000;
const FHEIGHT = 1000;
const PORT = 3000

//player class
class Player{
  constructor(obj = {}){
    this.id = Math.floor(Math.random()*1000000000);
    this.width = 80;
    this.height = 80;
    this.x = Math.random() * (FWIDTH - this.width);
    this.y = Math.random() * (FHEIGHT - this.height);
    this.angle = 0;
    this.movement = {}
  }

  move(distance){
    this.x += distance * Math.cos(this.angle);
    this.y += distance * Math.sin(this.angle);
  }
};

let player_list = {};

io.on('connection',onConnection);

function onConnection(socket){
  //initialize list
  console.log('succesfull')
  let player = null;

  socket.on('game-start',() =>{
    console.log('aaasuccesfullaaa')
    player = new Player({
      socketId: socket.id,
    });
    player_list[player.id] = player;
  });

  socket.on('movement',function(movement){
    if(!player){return;}
    console.log(movement);
    player.movement = movement;
  });

  socket.on('disconnect',()=>{
    if(!player){return;}
    delete player_list[player.id];
    player = null
  });

}

setInterval(function() {
  Object.values(player_list).forEach((player)=>{
    const movement = player.movement;
    if(movement.forward){
      player.move(5);
      console.log('UP');
    }
    if(movement.back){
      player.move(-5);
      console.log('DOWN');
    }
    if(movement.left){
      player.angle -= -0.1;
      console.log('LEFT');
    }
    if(movement.right){
      player.angle += 0.1;
      console.log('RIGHT');
    }
  });
  io.sockets.emit('state',player_list);

},1000/30);



app.use(express.static('public'));

app.get('/',(req,res) => {
  res.sendFile(path.join(__dirname,'/public/index.html'));
});

server.listen(PORT,function() {
  console.log('host port 8888 => port 3000')
});
